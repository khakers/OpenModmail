[tool.black]
line-length = "110"
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
(
  /(
      \.eggs
    | \.git
    | \.venv
    | venv
    | venv2
    | _build
    | build
    | dist
    | plugins
    | temp
  )/
)
'''

[tool.ruff]
target-version = "py310"
line-length = 110
select = ["C90", "E", "F", "I001", "PGH004", "RUF100"]
ignore = ["F405", "E741", "C901", "F403", "E501"]
fix = true
fixable = ["I001"]
isort.combine-as-imports = true
force-exclude = true

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 25


[tool.pdm]
plugins = [
    "sync-pre-commit-lock"
]
[[tool.pdm.source]]
name = "pypi"
url = "https://pypi.org/simple"
verify_ssl = true

[tool.pdm.dev-dependencies]
dev = [
    "black",
    "ruff",
    "tomli",
    "typing-extensions==4.6.3",
    "pre-commit",
]
[project]
name = "Discord-OpenModmail"
version = "4.2.0"
description = "ForkÂ² of a feature rich Discord Modmail bot written in Python."
authors = [
    { name = "", email = "" },
]
dependencies = [
    "aiohttp~=3.8.1",
    "colorama~=0.4.5",
    "emoji~=1.7.0",
    "isodate~=0.6.0",
    "motor~=3.1.2",
    "natural~=0.2.0",
    "parsedatetime~=2.6",
    "python-dateutil~=2.8.1",
    "python-dotenv~=1.0.0",
    "uvloop~=0.17.0; sys_platform != \"win32\"",
    "requests~=2.31.0",
    "attrs~=23.1.0",
    "cairocffi~=1.3.0",
    "cffi~=1.15.0",
    "strenum",
    "discord-py~=2.3.0",
    "setuptools>=69.0.3",
    "typing-extensions>=4.6.3",
    "minio~=7.2.3",
]
requires-python = ">=3.10"
readme = "README.md"
license = { text = "AGPL-3.0-or-later" }

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[tool.pdm.scripts]
# $ pdm requirements
requirements = "pdm export -o requirements.txt --without-hashes"
# $ pdm run bot
# OR
# $ pdm bot
bot = "bot.py"
check = "pdm run ruff check ."

# Manually sync with pdm sync-pre-commit
[tool.sync-pre-commit-lock]
# Run `pre-commit install` automatically if applicable
automaticall-install-hooks = true
# Should we sync your pre-commit versions with your lockfile (when running lock, add, update, remove, etc.)?
disable-sync-from-lock = false
# Packages to ignore when syncing from lock
ignore = []
# Name of the pre-commit config file to sync with
pre-commit-config-file = ".pre-commit-config.yaml"
